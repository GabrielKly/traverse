{
 "metadata": {
  "name": "Traversal Analysis"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": "Traverse.py Muti-Collection Analysis\n====================================\n\nIn this notebook, we will be performing analyses on a number of comma-separated values files generated by `traverse.py`.\n\n### First, grab the csv files from my Git repo.\n\nAll of the CSV data files are stored on my GitHub repository at http://github.com/hawkw/traverse, in the `data/` directory. The `data/datafiles.csv` file contains a listing of the available datafiles (as well as some additional metadata). We're going to use the paths stored in that file to access the individual data files."
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "import io, urllib2, bz2, pandas\n\n# Get the metadata CSV that contains the listing of all runs\ncsvData = pandas.read_csv('https://raw.github.com/hawkw/traverse/master/data/datafiles.csv') \n\ndatafiles = {}\n\n# Loop through the filenames column and grab each filename.\nfor filename in csvData['Filename']:\n    \n    url = 'https://raw.github.com/hawkw/traverse/master/data/' + filename\n    \n    try:\n        response = urllib2.urlopen(url).read()\n    except Exception as e:\n        print (\"Caught HTTPError while accessing\", e, url)\n    else:\n        try:\n            data = bz2.decompress(response)\n            datafiles[filename] = pandas.read_csv(io.BytesIO(data))\n            print(\"Successfully decompressed\" + filename)\n        except Exception as e:\n            print(\"Caught error \\\"{0}\\\" at {1}\".format(e,url))\n    ",
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "Successfully decompressed-Users-Owner_2014-02-05.csv.bz2\nSuccessfully decompressed-Users-will_2014-02-05.csv.bz2"
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "\nSuccessfully decompressed-Users-hawk_2014-02-06.csv.bz2"
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "\nSuccessfully decompressed-home-w-weismanm_2014-02-06.csv.bz2"
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "\nSuccessfully decompressed-home-c-clivem_2014-02-07.csv.bz2"
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "\nSuccessfully decompressed-home-b-blaken_2014-02-07.csv.bz2"
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "\n"
      }
     ],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "print (csvData)",
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "                              Filename                   Timestamp Platform  \\\n0      -Users-Owner_2014-02-05.csv.bz2                  2014-02-05   darwin   \n1       -Users-will_2014-02-05.csv.bz2                  2014-02-05   darwin   \n2       -Users-hawk_2014-02-06.csv.bz2                  2014-02-06   darwin   \n3  -home-w-weismanm_2014-02-06.csv.bz2  2014-02-06 10:11:16.397402   linux2   \n4    -home-c-clivem_2014-02-07.csv.bz2  2014-02-07 17:04:32.811112   linux2   \n5    -home-b-blaken_2014-02-07.csv.bz2  2014-02-07 17:14:22.441552   linux2   \n\n   Traversal Time              Name             Email Address  \n0             NaN        Troy Dinga      dingat@allegheny.edu  \n1             NaN  Willem Yarbrough  yarbroughw@allegheny.edu  \n2             NaN      Hawk Weisman    weismanm@allegheny.edu  \n3            0.61      Hawk Weisman    weismanm@allegheny.edu  \n4            2.92         Max Clive      clivem@allegheny.edu  \n5            2.58               NaN                       NaN  \n"
      }
     ],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "# get all the machines self-reporting as \"Darwin\" (Mac OS X)\nmacs = csvData[csvData['Platform'] == 'darwin']\n\n# get all the machines self-reporting as \"Linux2\" (Ubuntu)\nubuntus = csvData[csvData['Platform'] == 'linux2']\n\n# now get all nonzero ST_SIZE values from Macs and Ubuntus for graphing\n\nmac_sizes = []\nubuntu_sizes = []\n\nfor key, value in datafiles.items():\n    if key in list(macs['Filename']):\n        mac_sizes = mac_sizes + [size for size in value['st_size'] if size > 1]\n\nfor key, value in datafiles.items():\n    if key in list(ubuntus['Filename']):\n        ubuntu_sizes = ubuntu_sizes + [size for size in value['st_size'] if size > 1]\n        \n# now get all nonzero ST_SIZE and ST_NLINK values from Macs and Ubuntus for graphing\n\nmac_sizes = []\nubuntu_sizes = []\nmac_nlink = []\nubuntu_nlink = []\n\nfor key, value in datafiles.items():\n    if key in list(macs['Filename']):\n        mac_sizes = mac_sizes + [size for size in value['st_size'] if size > 1]\n        # NLINK = 1: file, NLINK > 1: directory\n        mac_nlink = mac_sizes + [nlink for nlink in value['st_nlink'] if nlink > 1]\n\nfor key, value in datafiles.items():\n    if key in list(ubuntus['Filename']):\n        ubuntu_sizes = ubuntu_sizes + [size for size in value['st_size'] if size > 1]\n        ubuntu_nlink = ubuntu_sizes + [nlink for nlink in value['st_nlink'] if nlink > 1]\n",
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": "Start graphing\n--------------\n\nNow that we've got our dataset, we can start doing some plotting "
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "from scipy import stats\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\n# make distribution plots for filesize on OSX and Ubuntu (matplotlib style)\nbins = 25\nplt.hist(ubuntu_sizes, bins, log=True, normed=True, color=\"#6495ED\", alpha=.5, histtype=\"stepfilled\")\nplt.hist(mac_sizes, bins, log=True, normed=True, color=\"#F08080\", alpha=.5, histtype=\"stepfilled\");\nplt.xlabel('File size')\nplt.ylabel('Frequency (logarithmic)')\nplt.title('Distribution of file sizes on Ubuntu and Mac OS X')\nplt.show()\n",
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\nIIQQQgzy/wG32B6u9RJqZQAAAABJRU5ErkJggg==\n",
       "text": "<matplotlib.figure.Figure at 0x116ea2fd0>"
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "# make distribution plots for filesize on OSX and Ubuntu (matplotlib style)\nbins = 25\nplt.hist(ubuntu_nlink, bins, log=True, normed=True, color=\"#6495ED\", alpha=.5, histtype=\"stepfilled\")\nplt.hist(mac_nlink, bins, log=True, normed=True, color=\"#F08080\", alpha=.5, histtype=\"stepfilled\");\nplt.xlabel('inode link count')\nplt.ylabel('Frequency (logarithmic)')\nplt.title('Distribution of inode link density on Ubuntu and Mac OS X')\nplt.show()\n",
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "iVBORw0KGgoAAAANSUhEUgAAAZAAAAEZCAYAAAC5AHPcAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3XlclOX+//HXzLCpiBtltqJiuSC4o+ARMSvquFKamphL\nJHUyO1JpnbTUvtWx5XfqHHNNNDmnTYnytBxNcSGEUjNNKxUzK3NfQhCGYa7fHxzmODIwiwz33NPn\n+Xj4eHjP3Pd9vedmhovruu7rGoNSSiGEEEK4yah1ACGEEPokFYgQQgiPSAUihBDCI1KBCCGE8IhU\nIEIIITwiFYgQQgiPSAUCHDp0CJPJRNeuXenatSsxMTH06NGDlStX2vZ5+umn7bYdmTNnDh9++KHD\n555++mkyMzMBMBqNHD9+3K2MX375JQ888AAA27ZtY8SIEW4d7wmr1crQoUO56aabeP311+2ec+V6\nuCMqKopNmza5dYzRaOT06dOsWbOGqVOn1rrvoUOHaNy4cb3kckVqaiobNmyw/X/Hjh11XkZtnnnm\nGaZMmVLt8aioKDZv3gx49j6tTW2fD29atWoViYmJ1R4/dOgQRqORhISEas9NmDDB9v6qKwsXLqRL\nly506tSJqKgoxo0bx08//WR7vqioiNTUVKKjo+nSpQvdunXjjTfecHiu119/ncjISH777TfbY3l5\neVx33XX8/PPPdZbZmYB6K8nHNWzYkK+++sq2ffjwYW6++WYaNWpEcnIys2fPdnqODRs20KlTJ4fP\nXXq8u9Nv9uzZY3tj9OjRg/fee8+t4z3x888/s3btWkpKSjAYDHbPuXI93GEwGKqV4arBgwczePDg\nOs1T5XJy1WbJkiW2/3/22WekpaXVeRm1qek1Xfp4XU4Tq+3zoZWQkBD279/P4cOHuf766wEoLi4m\nNze3Tn/ujz76KLt37+ajjz7immuuQSlFZmYmffr0oaCggGuuuYYZM2YQFhbGrl27APj111/p3bs3\nN9xwAwMHDrQ734MPPkhubi7jx48nKyuLX375hVGjRvHPf/6Ta6+9ts5yOyMtkBpcf/31zJkzhxdf\nfBGA8ePH8/LLLwOVf33HxMTQs2dPkpKSOHr0KPPnz2f79u08/vjjZGdnM378eIYMGUJUVBQzZsyw\nOx5g5syZdO/ena5du/LRRx8BsHz5crtfhFXbP//8M7NmzWLLli1MmjSJjRs30rlzZwDOnTvH2LFj\n6dy5M9HR0UyfPp2Kigqg8sMxe/Zs+vbtS5s2bXj11VcdvtYtW7bQp08f22v6z3/+w/nz50lKSqK8\nvJxu3bpx8OBBu2Mufj21lTN37lw6depETEwMI0aM4NixYwDs3buX3r17ExMTw8iRIzl//rztmLy8\nPPr160f37t3p2bOn7frU5OLr1r9/f5588kkSEhJo3bo148aNq/ZL8Ntvv6VNmzZ88MEH1c7lSa7l\ny5czdOhQkpOT6dy5M927d2fPnj0AZGVl2fbv3bs3W7ZsseVcvXo1Tz31FEeOHGHs2LFs3ryZsLAw\n21+VSiluvPFGdu/eXS1nTdfVldfvDnfep1D5vpg6dSoDBgygXbt2DB48mOLiYoefj4s/D5duVzl2\n7BjDhg0jLi6ONm3akJiYyIkTJwCIiIhg9uzZ9OvXj4iICKZPn247btasWURGRhIbG8v7779f4+sz\nmUzcfffd/POf/7Q9lpWVxbBhw2zXzWq1MnXqVHr37k2nTp3o2LEjeXl5AJw/f54JEyZw00030alT\nJ/7yl79UK+Pnn39m0aJFvPvuu1xzzTVAZUWdkpLCXXfdxfPPPw/A0aNHuXDhAuXl5QC0atWK999/\nn7Zt2zrMvmTJEr777jteeuklRowYweOPP06/fv1qfK1eoYT64YcfVGhoaLXHv/nmG9WoUSOllFLj\nx49XL7/8sjp8+LBq0qSJMpvNSimlXn75ZfXBBx8opZTq37+/Wr16tVJKqXvvvVfdcssttnNVHa+U\nUgaDQc2bN89WRosWLdSJEydURkaGGjRokO2Yi7eXL19u+39OTo6KiopSSik1btw49cgjjyillCor\nK1O33XabeuGFF2zlzJ8/Xyml1Pbt21VISIgqKyuze40nT55ULVu2VF988YVSSqk9e/ao8PBwdejQ\nIXXo0CGH18XR67m0nNLSUrVs2TIVFxenSkpKlFJKPfPMMyopKUkppVSXLl3UsmXLlFJK5efnK5PJ\npDZt2qROnz6tbrzxRvXjjz8qpZT65Zdf1HXXXacOHz5cLYPBYFCnTp1SGRkZavDgwUoppRISEtTd\nd9+tlFKqqKhIXXPNNWrjxo22n/Hu3btVZGSk2rBhg8PX5UmujIwM1bRpU/XLL78opZSaMmWKuvfe\ne5VSSrVt21YVFBQopZRau3atmjt3rlLK/r0SERGhtm/frpRSatiwYer1119XSim1fv16FRcXVy1j\nbdfV0evPycmpdo5nnnlGPfTQQ9Uej4qKUps2bbJdX3ffp/fee6/q27evMpvNqry8XHXr1k0tX768\n2mu++P3jaLvKq6++asuglFJ33HGHbb+IiAj12GOPKaUqfx4NGjRQP/zwg8rOzladOnVS58+fVxaL\nRQ0dOlQlJiZWO3fVe2L79u2qY8eOtscHDhyovvnmG9v7Ky8vT40cOdL2/PPPP297v/35z39WY8aM\nUVarVZnNZpWQkGC7flVWrVqlevbsWa18pZT68MMPVUxMjFJKqV27dqkbb7xRhYWFqaSkJDV37ly1\nb98+h8dV2bNnjwoMDFR33XVXrft5i7RAamEwGGjYsKHdY9deey0xMTF07dqVxx57jC5dujBkyBCH\nx/bt27fGc1d1WVT9RbN169Zam8yqhr8iP/30Ux566CEAgoKCSEtL45NPPrE9P3ToUAC6du1KWVkZ\nxcXFdscXFBQQGRlJz549AejYsSPx8fHk5OS49Zero3I++eQTJk6cSIMGDQB4+OGHWb9+PcePH2f3\n7t2MGzcOgNjYWGJiYgDYunUrR48eZejQoXTt2pU//vGPGI1Gh3+FO7o+BoPB9tdwaGgokZGRnD59\nGoPBQGlpKQMGDKBr164O+8RPnTrlUS6DwUD37t25+uqrAejWrZut73zUqFEMGzaM1NRUzpw5w2OP\nPVbr6/jTn/5k695atGiRbdzrYp9++qnD61peXu7w9Z85c6baOYxGxx99q9WKyWSybbv7PjUYDCQl\nJREYGEhAQACdO3eucRzh0veXo/fbww8/TO/evXnllVd44IEH+Oabb+zew1Xvu6uvvporr7yS06dP\n89lnn3HnnXfSqFEjTCYTkyZNqvW93K1bN4xGIzt27OCnn36iqKjIrqutT58+zJ07lwULFvDYY4+x\nevVqW4b169czadIkDAYDgYGBbNy40WEroKpVcamysjLb9ezcuTPff/89OTk53HrrreTl5REdHc2/\n//3vGrNv3LiRK664gq1bt9paZvVJKpBafPnll0RHR9u2lVIYDAY2bdrEihUraNGiBX/+85955JFH\nHB7fqFGjGs998QdYKUVQUBAGg8HujW42m51mtFqtdsdUVFRgsVhs21W/ZKrepK58aC89hysclVP1\n7+KsF5/XarXa/h8QEGB7rEOHDnz11Ve2f59//jm33nqr21mq8lTlMBgMfPDBB2zfvt1ht0ZVdndz\n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\n",
       "text": "<matplotlib.figure.Figure at 0x103995f90>"
      }
     ],
     "prompt_number": "*"
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "sns.distplot(mac_sizes)",
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "ename": "NameError",
       "evalue": "name 'sns' is not defined",
       "output_type": "pyerr",
       "traceback": [
        "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
        "\u001b[0;32m<ipython-input-1-da2bcb77ca3c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmac_sizes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
        "\u001b[0;31mNameError\u001b[0m: name 'sns' is not defined"
       ]
      }
     ],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": "",
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": "*"
    }
   ],
   "metadata": {}
  }
 ]
}